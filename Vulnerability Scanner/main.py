# Vulnerability scannallports using Python
# Following and improving on Alexis Ahmed youtube tutorial Python3 For Pentesting - Developing An Nmap scannallports
# Scanning misconfiguration, open ports, or outdated software running on the network
# Perform vulnerability scanning on firewalls, switches, routers, wireless access points, and other networking devices
## -v -sS -sV -sC -A -O','tcp'

import nmap
import Art.art
import Cyberhygiene.learn
import Cyberhygiene.tips
import Scanners.listdevices
import Scanners.ipscan


scanner = nmap.PortScanner()


# -- Header Section -- #


Art.art.cybername()
Art.art.robot()


print("""\n\n
        WELCOME TO THE FIRST step in reducing your home network's vulnerabilities against cyber attacks
____________________________________________________________________________________________________________
\n""".upper())

print(""" 
        To be able to use this tool you would need:
        _____________________________________________________________________
        You should know your Router's IP Address
        Can Access to your wifi online account\n\n
""")
 

# -- First Menu for user to navigate Core features of the Application
choice = 0

while choice < 4:
        userchoice=input("""
        
        You can: \n\n
        ______________________________________________________________________
        
                1. Learn more on why you need to secure your network
                2. Easy tips to create a secure network
                3. Do a port vulnerability scan on your Wifi Router
                4. Exit\n
        ______________________________________________________________________\n
        
        Enter your selection : """)
                
        choice=int(userchoice)


# -- First Choice (1) will call the Learn function -- #
        if choice == 1:
            Cyberhygiene.learn.learn()

# -- Second Choice (2) will call the Tips function -- #           
        elif choice == 2: 
            Cyberhygiene.tips.tips()

# -- Third Choice (3) will call the Port Scanning function -- #         
        elif choice == 3:  
            ip_addr = input("Please enter the IP address you want to scan: ")
            print("The is your Gateway IP address: ", ip_addr)
            type(ip_addr)
            def int_address(address):
              return list(map(int, address.split(".")))

            def bit_len(mask):
              return "".join(bin(m)[2:] for m in mask).find('0')

            def prefix(mask, ip):
              return ".".join(str(m & i) for m, i in zip(mask, ip))

            def cidr(mask, ip):
              mask = int_address(mask)
              ip = int_address(ip)
              return prefix(mask, ip)+"/"+str(bit_len(mask))

            print("This is our subnet mask: ",cidr("255.255.255.0", ip_addr))
            print("\n\n")


            resp = input("""\nPlease enter the type of scan you want to run
                        0) See the list of devices on your network
                        1) Open port scan
                        2) Comprehensive Scan
                       \n""")

            yourresp = int(resp)

            if yourresp == 1:

                print(""" Ports, explained simply is a doorway through which applications communicate
                There are various port numbers each are used for a specific purpose. 
                Ports allow for your computer to easily differentiate between different kinds of traffic. 
                For example emails go to a different port than webpages.
                Some ports you need open to be able to communicate with the internet.
                Others though, we can close.
                The following scan will show you all your open ports on your wifi followed with a list of ports that 
                we need to close with a a list of the kind of cyber threats.
                Wait while we do the scan....
                """)

                scanner.scan(ip_addr,'1-1024','-v -sS')
                print("Open Ports on TCP ",scanner[ip_addr]['tcp'].keys())
               
                scanner.scan(ip_addr,'1-1024','-v -sU')
                print("Open Ports on UDP ",scanner[ip_addr]['udp'].keys())
                
                
                print("""\n 
                Look at the list of numbers in brackets. Are there any of the following ports listed?
                * FTP ports (20, 21) - **anonymous authentication**  , cross-site scripting, password brute force, 
                  or directory traversal attacks                    
                * SSH (22) - brute forcing SSH credentials or using a private key to **gain access to the target 
                  system
                * SMB (139, 137, 445) - It could be exploited via the **EternalBlue vulnerability**  , brute 
                  forcing SMB login credentials, exploiting the SMB port using NTLM Capture, and connecting to 
                  SMB using PSexec
                * DNS (53) -Distributed Denial of Service (DDoS) attack
                * HTTP / HTTPS (443, 80, 8080, 8443) (except if you host your own webserver) - vulnerable to 
                  SQL injections, cross-site scripting, cross-site request forgery
                * Telnet (23) - allow users to connect to remote computers over the internet, 
                  **vulnerable to malware**, phishing, credential detection, and credential brute force
                * MTP (25) - vulnerable to **spam** and phishing
                * FTP (69) - password spraying and unauthorized access, and **denial of service (DoS) attacks.**""")

                closeport=input("\nDid you want to try and close these ports? (y/n) : \n")

                if closeport=='y' or 'Y':
                    print(""" 
                    Go to your routers interface.
                    This can usually be access by entering your Gateway / Wifi IP Address (the one you just 
                    used) into a web browser.
                    Enter login details (see access router training)
                    Open your router's settings. 
                    The way to access these settings differ depending on your brand of wireless 
                    router
                    """)

            elif yourresp == 2:

                print("""Wait while we do the scan....\n\n""")
                scanner.scan(ip_addr,'1-1024','-v -sS -sV -sC -A -O')
                print("Comprehensive scan results: ", scanner[ip_addr]['tcp'].keys())

            elif yourresp == 0:


                Scanners.ipscan.ipscanner_py()
                
                
                
            
        elif choice== 4:
            exit()

        else:
            exit()
